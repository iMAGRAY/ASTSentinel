name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build binaries (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        run: cargo build --release

      - name: Package artifact
        shell: bash
        run: |
          set -euo pipefail
          NAME=${{ runner.os == 'Windows' && 'windows-x86_64' || 'linux-x86_64' }}
          mkdir -p dist/$NAME
          cp target/release/pretooluse* dist/$NAME/ || true
          cp target/release/posttooluse* dist/$NAME/ || true
          cp target/release/userpromptsubmit* dist/$NAME/ || true
          (cd dist/$NAME && sha256sum * > SHA256SUMS.txt)
          if [ "$NAME" = "windows-x86_64" ]; then
            7z a ast-sentinel-$NAME.zip dist/$NAME/*
            echo "artifact=ast-sentinel-$NAME.zip" >> $GITHUB_OUTPUT
          else
            tar -C dist -czf ast-sentinel-$NAME.tar.gz $NAME
            echo "artifact=ast-sentinel-$NAME.tar.gz" >> $GITHUB_OUTPUT
          fi
        id: pkg

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.pkg.outputs.artifact }}
          path: ${{ steps.pkg.outputs.artifact }}

  update-badge:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          ref: master
      - name: Update release badge with tag
        run: |
          set -euo pipefail
          TAG="${{ github.ref_name }}"
          sed -i "s/>latest</>$TAG</" assets/badges/release.svg
      - name: Commit badge update
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add assets/badges/release.svg
          git commit -m "docs(badge): update release badge to ${{ github.ref_name }} (@codex)" || echo "no changes"
          git push

  release:
    needs: [build, update-badge]
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: AST Sentinel ${{ github.ref_name }}
          files: |
            artifacts/**
          generate_release_notes: true
          body: |
            AST Sentinel release.

            Documentation:
            - Project overview: README.md
            - Hooks reference: README_HOOKS.md
            - Project structure: docs/PROJECT_STRUCTURE.md
            - Testing guide: docs/TESTING.md
            - AST flags playbook: docs/PLAYBOOK_AST_FLAGS.md
